//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UploadTool.WebOrdersServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="BusinessObjects.Web", ConfigurationName="WebOrdersServiceReference.IWebOrdersService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IWebOrdersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="BusinessObjects.Web/IWebOrdersService/Login", ReplyAction="BusinessObjects.Web/IWebOrdersService/LoginResponse")]
        bool Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="BusinessObjects.Web/IWebOrdersService/CreateProduct", ReplyAction="BusinessObjects.Web/IWebOrdersService/CreateProductResponse")]
        int CreateProduct(System.Guid guid, string name, string nomenclature, decimal price, string brend, string tradeMark, string productType);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="BusinessObjects.Web/IWebOrdersService/CreateProductEnd", ReplyAction="BusinessObjects.Web/IWebOrdersService/CreateProductEndResponse")]
        void CreateProductEnd();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="BusinessObjects.Web/IWebOrdersService/CreateBrand", ReplyAction="BusinessObjects.Web/IWebOrdersService/CreateBrandResponse")]
        int CreateBrand(System.Guid guid, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="BusinessObjects.Web/IWebOrdersService/CreateTradeMark", ReplyAction="BusinessObjects.Web/IWebOrdersService/CreateTradeMarkResponse")]
        int CreateTradeMark(System.Guid guid, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="BusinessObjects.Web/IWebOrdersService/CreateProductType", ReplyAction="BusinessObjects.Web/IWebOrdersService/CreateProductTypeResponse")]
        int CreateProductType(System.Guid guid, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="BusinessObjects.Web/IWebOrdersService/CreateAnalitic", ReplyAction="BusinessObjects.Web/IWebOrdersService/CreateAnaliticResponse")]
        int CreateAnalitic(System.Guid guid, string name, int kindId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebOrdersServiceChannel : UploadTool.WebOrdersServiceReference.IWebOrdersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebOrdersServiceClient : System.ServiceModel.ClientBase<UploadTool.WebOrdersServiceReference.IWebOrdersService>, UploadTool.WebOrdersServiceReference.IWebOrdersService {
        
        public WebOrdersServiceClient() {
        }
        
        public WebOrdersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebOrdersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebOrdersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebOrdersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public int CreateProduct(System.Guid guid, string name, string nomenclature, decimal price, string brend, string tradeMark, string productType) {
            return base.Channel.CreateProduct(guid, name, nomenclature, price, brend, tradeMark, productType);
        }
        
        public void CreateProductEnd() {
            base.Channel.CreateProductEnd();
        }
        
        public int CreateBrand(System.Guid guid, string name) {
            return base.Channel.CreateBrand(guid, name);
        }
        
        public int CreateTradeMark(System.Guid guid, string name) {
            return base.Channel.CreateTradeMark(guid, name);
        }
        
        public int CreateProductType(System.Guid guid, string name) {
            return base.Channel.CreateProductType(guid, name);
        }
        
        public int CreateAnalitic(System.Guid guid, string name, int kindId) {
            return base.Channel.CreateAnalitic(guid, name, kindId);
        }
    }
}
